# Bake Begins!
### (1 of 6) Copy sources
$ cp -a /home/travis/build/fontdirectory/bowlbyone/METADATA.json /home/travis/build/fontdirectory/bowlbyone/builds/build
$ cp -a /home/travis/build/fontdirectory/bowlbyone/DESCRIPTION.en_us.html /home/travis/build/fontdirectory/bowlbyone/builds/build
$ cp -a BowlbyOne-Regular.ttf.ttx src/BowlbyOne-Regular.otf.ttx src/BowlbyOne-Regular-TTF.sfd BowlbyOne-Regular.ttf._g_l_y_f.ttx BowlbyOne-Regular.ttf._h_e_a_d.ttx BowlbyOne-Regular.ttf._h_h_e_a.ttx BowlbyOne-Regular.ttf._n_a_m_e.ttx BowlbyOne-Regular.ttf._g_a_s_p.ttx BowlbyOne-Regular.ttf.O_S_2f_2.ttx BowlbyOne-Regular.ttf.F_F_T_M_.ttx BowlbyOne-Regular.ttf._l_o_c_a.ttx BowlbyOne-Regular.ttf.GlyphOrder.ttx BowlbyOne-Regular.ttf._c_m_a_p.ttx BowlbyOne-Regular.ttf.D_S_I_G_.ttx BowlbyOne-Regular.ttf._h_m_t_x.ttx BowlbyOne-Regular.ttf.G_D_E_F_.ttx BowlbyOne-Regular.ttf._p_o_s_t.ttx BowlbyOne-Regular.ttf.G_S_U_B_.ttx BowlbyOne-Regular.ttf.G_P_O_S_.ttx BowlbyOne-Regular.ttf._m_a_x_p.ttx src/BowlbyOne-Regular.otf._h_e_a_d.ttx src/BowlbyOne-Regular.otf.G_P_O_S_.ttx src/BowlbyOne-Regular.otf.C_F_F_.ttx src/BowlbyOne-Regular.otf.GlyphOrder.ttx src/BowlbyOne-Regular.otf._p_o_s_t.ttx src/BowlbyOne-Regular.otf.O_S_2f_2.ttx src/BowlbyOne-Regular.otf._m_a_x_p.ttx src/BowlbyOne-Regular.otf._c_m_a_p.ttx src/BowlbyOne-Regular.otf._h_h_e_a.ttx src/BowlbyOne-Regular.otf._n_a_m_e.ttx src/BowlbyOne-Regular.otf._h_m_t_x.ttx /home/travis/build/fontdirectory/bowlbyone/builds/build/sources
### (2 of 6) pyfontaine
### (3 of 6) Run upstream tests
$ bakery-lint.py upstream-repo sources
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_component(): OK
$ fontaine --collections subsets --text /home/travis/build/fontdirectory/bowlbyone/builds/build/sources/BowlbyOne-Regular.otf.ttx /home/travis/build/fontdirectory/bowlbyone/builds/build/sources/BowlbyOne-Regular.ttf.ttx /home/travis/build/fontdirectory/bowlbyone/builds/build/sources/BowlbyOne-Regular-TTF.sfd > fontaine.txt
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_mark_to_mark(): OK
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_own_glyphs(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_bakery_yaml_exists(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_copyright_notices_same_across_family(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_description_html_exists(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_fontlog_txt_exists(): FAIL
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_metadata_json_exists(): OK
WARNING: Please install [PyICU](https://pypi.python.org/pypi/PyICU) toenable [feature], perhaps with: pip install pyicu
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_prepolation_glyph_contours(): OK
pyfontaine error: Not a TrueType or OpenType font (bad sfntVersion)
pyfontaine process has been failed
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_prepolation_glyph_points(): OK
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_test_prepolation_glyph_names(): OK
$ bakery-lint.py upstream-ttx BowlbyOne-Regular.otf.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/bowlbyone/builds/build/sources/BowlbyOne-Regular.otf.ttx /home/travis/build/fontdirectory/bowlbyone/builds/build/sources/BowlbyOne-Regular.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
$ bakery-lint.py upstream-ttx BowlbyOne-Regular.ttf.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/bowlbyone/builds/build/sources/BowlbyOne-Regular.ttf.ttx /home/travis/build/fontdirectory/bowlbyone/builds/build/sources/BowlbyOne-Regular.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
$ bakery-lint.py upstream BowlbyOne-Regular-TTF.sfd
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_has_rupee(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_A(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_A_a_glyph_instance(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_ended_ufo(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_folder(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_fsType_eq_1(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_it_exists(): ERROR
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_familyname_less_than_32_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_fullfontname_less_than_64_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_postscriptname_consistof_allowed_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_postscriptname_less_than_30_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_stylename_less_than_32_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_weight_value_range_between_250_and_900(): OK
### (4 of 6) Convert sources to TTF
$ ttx -d /home/travis/build/fontdirectory/bowlbyone/builds/build /home/travis/build/fontdirectory/bowlbyone/builds/build/sources/BowlbyOne-Regular.ttx
strippedname:/home/travis/build/fontdirectory/bowlbyone/builds/build/sources/BowlbyOne-Regular-TTF.sfd
Compiling "/home/travis/build/fontdirectory/bowlbyone/builds/build/sources/BowlbyOne-Regular.ttx" to "/home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular.ttf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'hmtx' table...
Parsing 'cmap' table...
Parsing 'loca' table...
Parsing 'glyf' table...
Parsing 'name' table...
Parsing 'post' table...
Parsing 'gasp' table...
Parsing 'FFTM' table...
Parsing 'GDEF' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Parsing 'DSIG' table...
$ font2ttf.py sources/BowlbyOne-Regular-TTF.sfd BowlbyOne-Regular-TTF.ttf
### Test BowlbyOne-Regular.ttf
$ bakery-lint.py result BowlbyOne-Regular.ttf
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
Internal Error: Invalid 2nd order spline in SplineRefigure2
Internal Error: Invalid 2nd order spline in SplineRefigure2
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ bakery-encode-glyphs-fix.py --autofix /home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular.ttf
$ mv /home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular.ttf.fix /home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular.ttf
Internal Error: Invalid 2nd order spline in SplineRefigure2
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ bakery-opentype-fix.py /home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular.ttf
$ mv /home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular.ttf.fix /home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): FAIL
$ bakery-gasp.py --set=15 /home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular.ttf
$ mv /home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular.ttf.fix /home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular.ttf
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ bakery-gasp.py --set=15 /home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular.ttf
$ mv /home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular.ttf.fix /home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular.ttf
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
Internal Error: Invalid 2nd order spline in SplineRefigure2
Internal Error: Invalid 2nd order spline in SplineRefigure2
Internal Error: Invalid 2nd order spline in SplineRefigure2
Internal Error: Invalid 2nd order spline in SplineRefigure2
Internal Error: Invalid 2nd order spline in SplineRefigure2
Internal Error: Invalid 2nd order spline in SplineRefigure2
Internal Error: Invalid 2nd order spline in SplineRefigure2
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
Success: Generated OpenType-TTF (/home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular-TTF.ttf)
### Test BowlbyOne-Regular-TTF.ttf
$ bakery-lint.py result BowlbyOne-Regular-TTF.ttf
### (5 of 6) Generate METADATA.json (genmetadata.py)
$ genmetadata.py /home/travis/build/fontdirectory/bowlbyone/builds/build
{} exists
Designer's name from font is: vernon adams
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ bakery-encode-glyphs-fix.py --autofix /home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular-TTF.ttf
Original size: 60120\nGzip size: 36351
Family Name: Bowlby One
PS Name: BowlbyOne
$ mv /home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular-TTF.ttf.fix /home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular-TTF.ttf
Full Name: Bowlby One
Style: normal
Weight: 400
Filename: BowlbyOne-Regular.ttf
Copyright: Copyright (c) 2011 by vernon adams (vern@newtypography.co.uk), with Reserved Font Names "Bowlby" "Bowlby One" and "Bowlby One SC". This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: http://scripts.sil.org/OFL
Family Name: Bowlby One
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
PS Name: BowlbyOne
Full Name: BowlbyOne
Style: normal
Weight: 400
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): FAIL
Filename: BowlbyOne-Regular-TTF.ttf
Copyright: Copyright (c) 2011 by vernon adams (vern@newtypography.co.uk), with Reserved Font Names "Bowlby" "Bowlby One" and "Bowlby One SC". This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: http://scripts.sil.org/OFL
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ bakery-opentype-fix.py /home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular-TTF.ttf
### (6 of 6) Run tests for METADATA.json
$ bakery-lint.py metadata METADATA.json
$ mv /home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular-TTF.ttf.fix /home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular-TTF.ttf
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_latin(): FAIL
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_latin_ext(): FAIL
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_menu(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_description_is_more_than_500b(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): FAIL
$ bakery-gasp.py --set=15 /home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular-TTF.ttf
bakery_lint.tests.metadata_test.MetadataTest.test_description_is_valid_html(): FAIL
$ mv /home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular-TTF.ttf.fix /home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular-TTF.ttf
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ bakery-gasp.py --set=15 /home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular-TTF.ttf
$ mv /home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular-TTF.ttf.fix /home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular-TTF.ttf
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ bakery-fstype-fix.py --autofix /home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular.ttf
$ mv /home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular.ttf.fix /home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_file_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
$ bakery-nbsp-fix.py /home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular.ttf
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
$ mv /home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular.ttf.fix /home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular.ttf
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_daltonmaag_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontbureau_catalogue(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
### Optimize TTF BowlbyOne-Regular.ttf
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
$ ls -l 'BowlbyOne-Regular.ttf'* # look at the size savings of that subset process
BowlbyOne-Regular.ttf.opt: 57852 bytes
BowlbyOne-Regular.ttf: 60120 bytes
$ mv /home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular.ttf.opt /home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular.ttf
### Autohint TTFs (ttfautohint) BowlbyOne-Regular.ttf
$ ls -l /home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular.ttf: 57852 bytes
/home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular.autohint.ttf: 85272 bytes
$ mv /home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular.autohint.ttf /home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular.ttf
### Subset TTFs (pyftsubset) BowlbyOne-Regular.ttf
Generate BowlbyOne-Regular.latin
Generate BowlbyOne-Regular.menu
spaceWidth is    716
nbspWidth is     721
BowlbyOne-Regular.ttf.fix made with spaceWidth and nbspWidth of 721
strippedname:/home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular.ttf
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ bakery-fstype-fix.py --autofix /home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular-TTF.ttf
$ mv /home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular-TTF.ttf.fix /home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular-TTF.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_file_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
$ bakery-nbsp-fix.py /home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular-TTF.ttf
$ mv /home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular-TTF.ttf.fix /home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular-TTF.ttf
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontscom_catalogue(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontshop_catalogue(): FAIL
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
### Optimize TTF BowlbyOne-Regular-TTF.ttf
$ ls -l 'BowlbyOne-Regular-TTF.ttf'* # look at the size savings of that subset process
BowlbyOne-Regular-TTF.ttf.opt: 55312 bytes
BowlbyOne-Regular-TTF.ttf: 57812 bytes
$ mv /home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular-TTF.ttf.opt /home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular-TTF.ttf
### Autohint TTFs (ttfautohint) BowlbyOne-Regular-TTF.ttf
$ ls -l /home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular-TTF.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular-TTF.ttf: 55312 bytes
/home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular-TTF.autohint.ttf: 82820 bytes
$ mv /home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular-TTF.autohint.ttf /home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular-TTF.ttf
### Subset TTFs (pyftsubset) BowlbyOne-Regular-TTF.ttf
Generate BowlbyOne-Regular-TTF.latin
Generate BowlbyOne-Regular-TTF.menu
spaceWidth is    716
nbspWidth is     721
BowlbyOne-Regular-TTF.ttf.fix made with spaceWidth and nbspWidth of 721
strippedname:/home/travis/build/fontdirectory/bowlbyone/builds/build/BowlbyOne-Regular-TTF.ttf
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontsmith_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_houseind_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_myfonts_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_veer_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_family_is_listed_in_gwf(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_atleast_latin_menu_subsets_exist(): OK
/home/travis/virtualenv/python2.7.8/lib/python2.7/site-packages/bakery_lint/tests/metadata_test.py:141: UnicodeWarning: Unicode equal comparison failed to convert both arguments to Unicode - interpreting them as being unequal
  self.assertTrue(designer in designers,
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_designer_exists_in_profiles_csv(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_fonts_items_dicts(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_fonts_key_list(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_fonts_no_dupes(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_has_unique_style_weight_pairs(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_keys(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_license(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_no_unknown_top_keys(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_subsets_key_list(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_top_keys_types(): FAIL
bakery_lint.tests.downstream.test_check_canonical_weights.CheckCanonicalWeights.test_check_canonical_weights(): OK
bakery_lint.tests.downstream.test_check_canonical_weights.CheckPostScriptNameMatchesWeight.test_postscriptname_contains_correct_weight(): FAIL
bakery_lint.tests.downstream.test_check_canonical_weights.CheckFontWeightSameAsInMetadata.test_font_weight_same_as_in_metadata(): OK
bakery_lint.tests.downstream.test_check_canonical_weights.CheckFullNameEqualCanonicalName.test_metadata_contains_current_font(): OK
bakery_lint.tests.downstream.test_check_canonical_filenames.CheckCanonicalFilenames.test_check_canonical_filenames(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_font_name_matches_family(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_family(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_family_values_are_all_the_same(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_filename_matches_postScriptName(): FAIL
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_font_have_regular(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_fonts_fields_have_fontname(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_fullname_is_equal_to_internal_font_fullname(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_fullname_matches_postScriptName(): FAIL
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_postScriptName_matches_ttf_fontname(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_regular_is_400(): FAIL
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_regular_is_normal(): FAIL
bakery_lint.tests.downstream.test_check_subsets_exists.CheckSubsetsExist.test_check_subsets_exists(): FAIL
bakery_lint.tests.downstream.test_check_monospace_agreements.CheckMonospaceAgreement.test_check_monospace_agreement(): OK
bakery_lint.tests.downstream.test_check_canonical_styles.CheckCanonicalStyles.test_check_canonical_styles(): OK
bakery_lint.tests.downstream.test_check_familyname_matches_fontnames.CheckFamilyNameMatchesFontNames.test_check_familyname_matches_fontnames(): OK
bakery_lint.tests.downstream.test_check_font_name_not_in_camelcase.CheckFontNameNotInCamelCase.test_fontname_not_in_camel_case(): OK
bakery_lint.tests.downstream.test_check_metadata_matches_nametable.CheckMetadataMatchesNameTable.test_check_metadata_matches_nametable(): OK
bakery_lint.tests.downstream.test_check_files_menu_agreements.CheckFontsMenuAgreements.test_menu_file_agreement(): FAIL
bakery_lint.tests.downstream.test_check_glyph_consistency.CheckGlyphConsistencyInFamily.test_the_same_encodings_of_glyphs_across_family(): OK
bakery_lint.tests.downstream.test_check_glyph_consistency.CheckGlyphConsistencyInFamily.test_the_same_names_of_glyphs_across_family(): OK
bakery_lint.tests.downstream.test_check_glyph_consistency.CheckGlyphConsistencyInFamily.test_the_same_number_of_glyphs_across_family(): OK
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_copyrighttxt_exists(): FAIL
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_description_exists(): OK
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_fontlogtxt_exists(): FAIL
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_licensetxt_exists(): FAIL
bakery_lint.tests.downstream.test_check_metadata_style_matches_names.CheckItalicStyleMatchesMacStyle.test_check_italic_style_matches_names(): OK
bakery_lint.tests.downstream.test_check_metadata_style_matches_names.CheckNormalStyleMatchesMacStyle.test_check_normal_style_matches_names(): OK
bakery_lint.tests.downstream.test_check_metadata_fields.CheckMetadataFields.test_check_metadata_fields(): OK
bakery_lint.tests.downstream.test_check_menu_contains_proper_glyphs.CheckMenuSubsetContainsProperGlyphs.test_check_menu_contains_proper_glyphs(): OK
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_copyright_contains_correct_rfn(): OK
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_copyright_is_consistent_across_family(): OK
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_copyright_matches_pattern(): OK
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_metadata_copyright_size(): OK
{
  "name": "Bowlby One", 
  "designer": "Vernon Adams", 
  "license": "OFL", 
  "visibility": "External", 
  "category": "Display", 
  "size": 36297, 
  "fonts": [
    {
      "name": "Bowlby One", 
      "postScriptName": "BowlbyOne", 
      "fullName": "Bowlby One", 
      "style": "normal", 
      "weight": 400, 
      "filename": "BowlbyOne-Regular.ttf", 
      "copyright": "Copyright (c) 2011 by vernon adams (vern@newtypography.co.uk), with Reserved Font Names \"Bowlby\" \"Bowlby One\" and \"Bowlby One SC\". This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: http://scripts.sil.org/OFL"
    }, 
    {
      "name": "Bowlby One", 
      "postScriptName": "BowlbyOne", 
      "fullName": "BowlbyOne", 
      "style": "normal", 
      "weight": 400, 
      "filename": "BowlbyOne-Regular-TTF.ttf", 
      "copyright": "Copyright (c) 2011 by vernon adams (vern@newtypography.co.uk), with Reserved Font Names \"Bowlby\" \"Bowlby One\" and \"Bowlby One SC\". This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: http://scripts.sil.org/OFL"
    }
  ], 
  "subsets": [
    "latin"
  ], 
  "dateAdded": "2011-07-13"
}
